syntax = "proto3";
option go_package = "proto";
package proto;

service ControllerMesh {
  rpc RegisterV1(stream ProxyStatusV1) returns (stream ProxySpecV1) {}
}

message ProxyStatusV1 {
  SelfInfo selfInfo = 1;
  MetaStateV1 metaState = 2;
  LeaderElectionStateV1 leaderElectionState = 3;
}

message SelfInfo {
  string namespace = 1;
  string name = 2;
}

message MetaStateV1 {
  string subset = 1;
  string expectedHash = 2;
  string currentHash = 3;
  string hashUnloadReason = 4;
}

message LeaderElectionStateV1 {
  string identity = 1;
  bool isLeader = 2;
}

message ProxySpecV1 {
  SpecMetaV1 meta = 1;
  RouteV1 route = 2;
  repeated EndpointV1 endpoints = 3;
}

message SpecMetaV1 {
  string vAppName = 1;
  string hash = 2;
}

message RouteV1 {
  string subset = 1;
  repeated MatchLimitRuleV1 globalLimits = 2;
  repeated SubsetLimitV1 subsetLimits = 3;
  repeated APIGroupResourceV1 subsetPublicResources = 4;
}

message SubsetLimitV1 {
  string subset = 1;
  repeated MatchLimitRuleV1 limits = 2;
}

message MatchLimitRuleV1 {
  repeated string namespaces = 1;
  string objectSelector = 2;
  repeated APIGroupResourceV1 resources = 3;
}

message APIGroupResourceV1 {
  repeated string apiGroups = 1;
  repeated string resources = 2;
}

message EndpointV1 {
  string name = 1;
  string subset = 2;
  string ip = 3;
}
